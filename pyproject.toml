[tool.poetry]
name = "backend"
version = "0.1.0"
description = "A FastAPI app to manage AI teams."
authors = [
    "AI in Hand <hello@ainhand.com>"
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11.0a1,<3.13"
cryptography = "^42.0.5"
duckduckgo-search = "^5.3.0"
fastapi = "^0.110.2"
firebase-admin = "^6.3.0"
google-cloud-logging = "^3.10.0"
gunicorn = "^21.2.0"
instructor = "^1.2.2"
openai = "^1.23.3"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pyairtable = "^2.3.3"
pydantic = "^2.7.0"
pydantic-settings = "^2.1.0"
redis = "^5.0.4"
tiktoken = "^0.6.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}

agency-swarm = { git = "https://github.com/VRSEN/agency-swarm.git", rev = "v0.1.7" }

[tool.poetry.group.dev.dependencies]
poetry-plugin-export = ">=1.6.0"
pre-commit = ">=3.6.0"
pytest = ">=7.4.3"
pytest-asyncio = ">=0.23.3"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.14.0"

[tool.pyright]
# https://github.com/microsoft/pyright/blob/main/docs/configuration.md
useLibraryCodeForTypes = true
exclude = [".cache"]

[tool.ruff]
# https://beta.ruff.rs/docs/configuration/
line-length = 120
target-version = "py311"

[tool.ruff.lint]
ignore = ['W291', 'W292', 'W293']
select = ['E', 'W', 'F', 'I', 'B', 'C4', 'ARG', 'SIM', 'UP']

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Body", "fastapi.params.Body"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
